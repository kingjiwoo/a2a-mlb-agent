name: CI

on:
  push:
    branches: [ main, add_tests ]
  pull_request:
    branches: [ main, add_tests ]

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        pip install uv
        uv sync --extra test
    - name: Run tests with coverage
      run: uv run pytest --cov-report=xml

    - name: Generate coverage badge
      # Only run on push events or PRs from the same repository (not external forks)
      if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
      run: |
        # Extract coverage percentage from XML
        COVERAGE=$(python -c "
        import xml.etree.ElementTree as ET
        tree = ET.parse('coverage.xml')
        root = tree.getroot()
        coverage = float(root.attrib['line-rate']) * 100
        print(f'{coverage:.2f}')
        ")
        
        # Create shields.io badge URL
        BADGE_URL="https://img.shields.io/badge/coverage-${COVERAGE}%25-brightgreen"
        
        # Update README.md with new badge URL
        sed -i "s|https://img.shields.io/badge/coverage-[0-9.]*%25-brightgreen|${BADGE_URL}|g" README.md
        
        # Get the current branch name
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          BRANCH_NAME="${{ github.head_ref }}"
        else
          BRANCH_NAME="${{ github.ref_name }}"
        fi
        
        # Commit and push if changes were made
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        git diff --staged --quiet || git commit -m "Update coverage badge to ${COVERAGE}%"
        
        # Try to push, and if it fails, pull and try again
        if ! git push origin HEAD:${BRANCH_NAME}; then
          echo "Push failed, pulling latest changes and retrying..."
          git pull origin ${BRANCH_NAME} --rebase || git pull origin ${BRANCH_NAME} --no-rebase
          git push origin HEAD:${BRANCH_NAME}
        fi

    - name: Coverage report (for external PRs)
      # Only run on external PRs where we can't update the badge
      if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository
      run: |
        # Extract coverage percentage from XML
        COVERAGE=$(python -c "
        import xml.etree.ElementTree as ET
        tree = ET.parse('coverage.xml')
        root = tree.getroot()
        coverage = float(root.attrib['line-rate']) * 100
        print(f'{coverage:.2f}')
        ")
        
        echo "## Coverage Report" >> $GITHUB_STEP_SUMMARY
        echo "Current coverage: **${COVERAGE}%**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Note: Coverage badge cannot be updated automatically for external pull requests due to security restrictions." >> $GITHUB_STEP_SUMMARY
        echo "The badge will be updated when this PR is merged by a maintainer." >> $GITHUB_STEP_SUMMARY
        
        # Output coverage to logs for visibility
        echo "Coverage: ${COVERAGE}%" 